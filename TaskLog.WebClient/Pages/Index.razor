@page "/"
@using System.Globalization
@inject WeatherForecastService ForecastService

<JobContainerView Jobs="Jobs" OnStatusUpdated="HandleStatusUpdated">
    <JobDayView ShortDateString="@DateTime.Now.AddDays(-2).ToShortDateString()" />
    <JobDayView ShortDateString="@DateTime.Now.AddDays(-1).ToShortDateString()" />
    <JobDayView ShortDateString="@DateTime.Now.ToShortDateString()" />
    <JobDayView ShortDateString="@DateTime.Now.AddDays(1).ToShortDateString()" />
    <JobDayView ShortDateString="@DateTime.Now.AddDays(2).ToShortDateString()" />
</JobContainerView>

<hr />
<p>Last updated job was: <strong>@lastUpdatedJob</strong></p>
<hr />

@*@foreach (var task in Jobs)
{
    <p>@task.Name - <strong>@task.Hours</strong></p>
}*@

@code {
    int calendarWeek;
    List<TaskInstance> ProjectTasks { get; set; }

    protected override void OnInitialized()
    {
        var calendar = DateTimeFormatInfo.CurrentInfo.Calendar;
        calendarWeek = calendar.GetWeekOfYear(DateTime.Now, CalendarWeekRule.FirstDay, DayOfWeek.Monday);
        var tasks = new List<TaskInstance>();
        tasks.AddRange(ForecastService.GetTaskInstances(DateTime.Now));
        tasks.AddRange(ForecastService.GetTaskInstances(DateTime.Now.AddDays(-1)));
        tasks.AddRange(ForecastService.GetTaskInstances(DateTime.Now.AddDays(+5)));
        tasks.AddRange(ForecastService.GetTaskInstances(DateTime.Now.AddDays(+2)));
        ProjectTasks = tasks.ToList();
        Jobs = tasks.ToList();
    }

    List<TaskInstance> Jobs = new List<TaskInstance>();
    string lastUpdatedJob = "";

    //protected override void OnInitialized()
    //{
    //    Jobs.Add(new JobModel { Id = 1, Description = "Mow the lawn", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //    Jobs.Add(new JobModel { Id = 2, Description = "Go to the gym", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //    Jobs.Add(new JobModel { Id = 3, Description = "Call Ollie", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //    Jobs.Add(new JobModel { Id = 4, Description = "Fix bike tyre", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //    Jobs.Add(new JobModel { Id = 5, Description = "Finish blog post", Status = JobStatuses.Todo, LastUpdated = DateTime.Now });
    //}

    void HandleStatusUpdated(TaskInstance updatedJob)
    {
        lastUpdatedJob = updatedJob.ToString();
    }
}
