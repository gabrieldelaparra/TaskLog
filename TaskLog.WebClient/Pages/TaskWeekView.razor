<style>
    .jobs-container {
        display: flex;
        justify-content: space-around;
    }
</style>

<div class="jobs-container">
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>

@code {
    [Parameter] public List<TaskInstance> Tasks { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public EventCallback<TaskInstance> OnStatusUpdated { get; set; }

    public TaskInstance Payload { get; set; }

    public async Task UpdateJobAsync(string newStatus)
    {
        var task = Tasks.SingleOrDefault(x => x.Id == Payload.Id);

        if (task != null)
        {
            task.Date = DateTime.Parse(newStatus);
            //task.LastUpdated = DateTime.Now;
            await OnStatusUpdated.InvokeAsync(Payload);
        }
    }
}
