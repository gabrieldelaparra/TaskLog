@using TaskLog.WebClient.Models
@using TaskLog.WebClient.Services
@inject TaskDragStateHandler TaskDragStateHandler

<style>
    .week-container {
        display: flex;
        margin-left: 160px;
        justify-content: space-around;
        flex-direction: row;
    }
</style>

<div class="week-container">
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>

@code {
    [Parameter] public List<JobTask> Tasks { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public EventCallback<JobTask> OnDateChanged { get; set; }

    public JobTask DraggedTask => TaskDragStateHandler.TaskView.JobTask;

    public async Task MoveToNewDate(string newTaskDate)
    {
        //from the complete task list, search the on that is dragged.
        var task = Tasks.SingleOrDefault(x => x.Id == DraggedTask.Id);

        if (task != null)
        {
            task.Date = DateTime.Parse(newTaskDate);
            await OnDateChanged.InvokeAsync(DraggedTask);
        }
    }
}
