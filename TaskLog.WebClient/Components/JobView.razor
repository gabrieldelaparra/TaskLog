@using TaskLog.WebClient.Models
@using TaskLog.WebClient.Services
@inject TaskDragStateHandler TaskDragStateHandler
<style>
    .jobItem {
        display: flex;
        flex-direction: row;
    }

    .jobDropzone {
        padding: 3px;
        border: 1px dashed #75868a;
        list-style: none;
        width: 200px;
        /*min-height: 100px;*/
    }

    .no-drop {
        border: 1px dashed red;
        background: BISQUE;
    }

    .can-drop {
        border: 1px dashed green;
        background: HONEYDEW;
    }
</style>

<div class="jobItem">
    <div class="jobDropzone @dropClass"
         ondragover="event.preventDefault();"
         ondragstart="event.dataTransfer.setData('', event.target.id);"
         @ondrop="HandleDrop"
         @ondragenter="HandleDragEnter"
         @ondragleave="HandleDragLeave"
         style="background: @Job.DefaultColor">

        @Job.Code
        <div class="text-truncate">
            <small>
                @Job.Description
            </small>
        </div>

    </div>
</div>

@code {
    [Parameter] public ProjectJob Job { get; set; }
    private TaskView TaskView => TaskDragStateHandler.TaskView;

    string dropClass = "";

    private void HandleDragEnter()
    {
        dropClass = "can-drop";
    }

    private void HandleDragLeave()
    {
        dropClass = "";
    }

    private void HandleDrop()
    {
        dropClass = "";

        TaskView.JobTask.ProjectJob = Job;
        TaskView.UpdateState();

        StateHasChanged();
    }
}

